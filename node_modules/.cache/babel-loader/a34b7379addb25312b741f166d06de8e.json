{"ast":null,"code":"var _jsxFileName = \"/workspace/GithubSearch/github_finder/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'; //GithubSearch/github_finder/src/components/layout/Navbar.js\n\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios'; // api fetching package used to \n\nimport GithubState from './context/github/GithubState';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); //search github users \n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //get a single github user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  }; //get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  }; //clear users from state \n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; //set alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    }); //make it go away after a certain time \n\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(GithubState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/workspace/GithubSearch/github_finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","GithubState","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","searchUsers","text","res","get","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';//GithubSearch/github_finder/src/components/layout/Navbar.js\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios'// api fetching package used to \n\nimport GithubState from './context/github/GithubState'\n\nimport './App.css';\n\n\nconst App\t= () =>{\n\tconst [users, setUsers] = useState([]);\n\tconst [user, setUser] = useState({});\n\tconst [repos, setRepos] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [alert, setAlert] = useState(null);\n\n\t//search github users \n\tconst searchUsers =  async (text) =>{\n\t\tsetLoading(true);\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\t\t\n\t\tsetUsers(res.data.items);\n\t\tsetLoading(false);\n\t};\n\n\t//get a single github user\n\tconst getUser = async (username) =>{\n\t\tsetLoading(true);\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\t\t\n\t\tsetUser(res.data)\n\t\tsetLoading(false);\n\t};\n\t\n\t//get users repos\n\tconst getUserRepos = async (username) =>{\n\t\tsetLoading(true);\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\t\t\n\t\tsetRepos(res.data);\n\t\tsetLoading(false);\n\t};\n\n\t//clear users from state \n\tconst clearUsers = () => {\n\t\tsetUsers([]);\n\t\tsetLoading(false);\n\t};\n\n\t//set alert\n\tconst showAlert = (msg, type) => {\n\t\tsetAlert({msg, type});\n\t\t//make it go away after a certain time \n\t\tsetTimeout(()=> setAlert(null),5000)\n\t};\n\t\t\n\treturn (\n\t\t<GithubState>\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar />\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<Alert\n\t\t\t\t\t\talert={alert}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route \n\t\t\t\t\t\t\texact \n\t\t\t\t\t\t\tpath='/' \n\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<Search \n\t\t\t\t\t\t\t\t\t\tsearchUsers={searchUsers} \n\t\t\t\t\t\t\t\t\t\tclearUsers={clearUsers} \n\t\t\t\t\t\t\t\t\t\tshowClear={users.length>0 ? true : false}\n\t\t\t\t\t\t\t\t\t\tsetAlert={showAlert}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Users loading={loading} users={users}/>\t\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/about\"\n\t\t\t\t\t\t\tcomponent={About}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route \n\t\t\t\t\t\t\texact \n\t\t\t\t\t\t\tpath='/user/:login' \n\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<User \n\t\t\t\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\t\t\t\tgetUser={getUser}\n\t\t\t\t\t\t\t\t\t\tgetUserRepos={getUserRepos}\n\t\t\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\t\t\trepos={repos}\n\t\t\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Router>\n\t\t</GithubState>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}