{"ast":null,"code":"var _jsxFileName = \"/workspace/GithubSearch/github_finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar'; //GithubSearch/github_finder/src/components/layout/Navbar.js\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.foo2 = () => 'Bars';\n  }\n\n  render() {\n    // const name = 'John Doe';\n    // const foo = ()=>'Bar';\n    // const loading = false;\n    // const showName= true;\n    return (\n      /*#__PURE__*/\n      //JSX is the html code below java script synatx extention XML or html in a way\n      // under the hood its actually javascript ,,, JSX needs one parent element such as the div \n      // we can use fragments instead of div or empty brackets <>\n      //use classname instead of class\n      //<React.Fragment>\n      //\t<h2>hello</h2>\n      //</React.Fragment>\n      // or no jsx \treturn React.createElement('div',{className:'App'}, React.createElement('h1',null,'hello from react'));\n      // {loading ? <h4>loading</h4> : <h2>not loading</h2>}\n      // <h1>Hello {showName && name}</h1>\n      // <h1>Hello {1+1}</h1>\n      // <h1>Hello {foo()}</h1>\n      // <h1>Hello {this.foo2()}</h1>\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/workspace/GithubSearch/github_finder/src/App.js"],"names":["React","Component","Navbar","App","foo2","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CAAgD;;AAChD,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC3BG,IAD2B,GACpB,MAAI,MADgB;AAAA;;AAE1BC,EAAAA,MAAM,GAAE;AACR;AACA;AACA;AACA;AAEA;AAAA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACA;AACA;AACA;AACA;AAGD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAhBD;AAoBA;;AA5B0B;;AA+B5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Navbar from './components/layout/Navbar';//GithubSearch/github_finder/src/components/layout/Navbar.js\nimport './App.css';\n\n\nclass App\textends Component {\n\tfoo2 = ()=>'Bars'\n  render(){\n\t\t// const name = 'John Doe';\n\t\t// const foo = ()=>'Bar';\n\t\t// const loading = false;\n\t\t// const showName= true;\n\t\n\t\treturn (\n\t\t\t//JSX is the html code below java script synatx extention XML or html in a way\n\t\t\t// under the hood its actually javascript ,,, JSX needs one parent element such as the div \n\t\t\t// we can use fragments instead of div or empty brackets <>\n\t\t\t//use classname instead of class\n\t\t\t//<React.Fragment>\n\t\t\t//\t<h2>hello</h2>\n\t\t\t//</React.Fragment>\n\t\t\t// or no jsx \treturn React.createElement('div',{className:'App'}, React.createElement('h1',null,'hello from react'));\n\t\t\t\t// {loading ? <h4>loading</h4> : <h2>not loading</h2>}\n\t\t\t\t// <h1>Hello {showName && name}</h1>\n\t\t\t\t// <h1>Hello {1+1}</h1>\n\t\t\t\t// <h1>Hello {foo()}</h1>\n\t\t\t\t// <h1>Hello {this.foo2()}</h1>\n\t\t\t\n\t\t\t\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar />\n    \t</div>\n  \t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}