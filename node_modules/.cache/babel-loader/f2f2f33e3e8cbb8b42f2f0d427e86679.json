{"ast":null,"code":"var _jsxFileName = \"/workspace/GithubSearch/github_finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // search user \n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // get REpos\n  // clear users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set loading \n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/workspace/GithubSearch/github_finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","clearUsers","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACCC,YADD,EAECC,QAFD,EAGCC,WAHD,EAICC,SAJD,EAKCC,WALD,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAC;AAClBC,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,IAAI,EAAC,EAFa;AAGlBC,IAAAA,KAAK,EAAC,EAHY;AAIlBC,IAAAA,OAAO,EAAE;AAJS,GAAnB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CAR4B,CAU5B;;AACA,QAAMO,WAAW,GAAI,MAAOC,IAAP,IAAe;AACnCC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,yCAAwCH,IAAK;;gDAAxD,CAAlB;AAIAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEnB,YADE;AAERoB,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAFV,KAAD,CAAR;AAIA,GAXD,CAX4B,CAwB5B;;;AACA,QAAMC,OAAO,GAAG,MAAOC,QAAP,IAAmB;AAClCR,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,gCAA+BM,QAAS;;gDAAnD,CAAlB;AAIAX,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAElB,QADE;AAERmB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAXD,CAzB4B,CAsC5B;AAEA;;;AACA,QAAMI,UAAU,GAAG,MAAMZ,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEjB;AAAR,GAAD,CAAjC,CAzC4B,CA2C5B;;;AACA,QAAMc,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEf;AAAR,GAAD,CAAjC;;AAEA,sBACC,oBAAC,aAAD,CAAe,QAAf;AACA,IAAA,KAAK,EAAE;AACNI,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADP;AAENC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFN;AAGNC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHP;AAINC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJT;AAKNG,MAAAA,WALM;AAMNW,MAAAA;AANM,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUCnB,KAAK,CAACoB,QAVP,CADD;AAcA,CA5DD;;AA8DA,eAAerB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n\tSEARCH_USERS,\n\tGET_USER,\n\tCLEAR_USERS,\n\tGET_REPOS,\n\tSET_LOADING,\n} from '../types';\n\nconst GithubState = props => {\n\tconst initialState={\n\t\tusers:[],\n\t\tuser:{},\n\t\trepos:[],\n\t\tloading: false\n\t};\n\t\n\tconst [state, dispatch] = useReducer(GithubReducer, initialState);\n\t\n\t// search user \n\tconst searchUsers =  async (text) =>{\n\t\tsetLoading(true);\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: SEARCH_USERS,\n\t\t\tpayload: res.data.items\n\t\t});\n\t};\n\t\n\t// get User\n\tconst getUser = async (username) =>{\n\t\tsetLoading();\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n\t\t\t{process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_USER,\n\t\t\tpayload: res.data\n\t\t});\n\t};\n\t\n\t// get REpos\n\t\n\t// clear users\n\tconst clearUsers = () => dispatch({ type: CLEAR_USERS });\n\t\n\t// Set loading \n\tconst setLoading = () => dispatch({ type: SET_LOADING });\n\t\n\treturn (\n\t\t<GithubContext.Provider\n\t\tvalue={{\n\t\t\tusers: state.users,\n\t\t\tuser: state.user,\n\t\t\trepos: state.repos,\n\t\t\tloading: state.loading,\n\t\t\tsearchUsers,\n\t\t\tclearUsers\n\t\t}}\n\t>\n\t\t{props.children}\n\t</GithubContext.Provider>\n\t);\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}