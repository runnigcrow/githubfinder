{"ast":null,"code":"var _jsxFileName = \"/workspace/GithubSearch/github_finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING } from '../types'; // eslint-disable-next-line\n\nlet githubClientId; // eslint-disable-next-line\n\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // search user \n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // clear users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set loading \n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/workspace/GithubSearch/github_finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACCC,YADD,EAECC,QAFD,EAGCC,WAHD,EAICC,SAJD,EAKCC,WALD,QAMO,UANP,C,CAOA;;AACA,IAAIC,cAAJ,C,CACA;;AACA,IAAIC,kBAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA0C;AACzCJ,EAAAA,cAAc,GAAGE,OAAO,CAACC,GAAR,CAAYE,0BAA7B;AACAJ,EAAAA,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYG,8BAAjC;AACA,CAHD,MAGO;AACNN,EAAAA,cAAc,GAAGE,OAAO,CAACC,GAAR,CAAYI,gBAA7B;AACAN,EAAAA,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYK,oBAAjC;AACA;;AAED,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAC;AAClBC,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,IAAI,EAAC,EAFa;AAGlBC,IAAAA,KAAK,EAAC,EAHY;AAIlBC,IAAAA,OAAO,EAAE;AAJS,GAAnB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,UAAU,CAACG,aAAD,EAAgBiB,YAAhB,CAApC,CAR4B,CAU5B;;AACA,QAAMO,WAAW,GAAI,MAAOC,IAAP,IAAe;AACnCC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMC,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,GAAN,CAAW,yCAAwCH,IAAK;;wBAAxD,CAAlB;AAIAF,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAE5B,YADE;AAER6B,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAFV,KAAD,CAAR;AAIA,GAXD,CAX4B,CAwB5B;;;AACA,QAAMC,OAAO,GAAG,MAAOC,QAAP,IAAmB;AAClCR,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,GAAN,CAAW,gCAA+BM,QAAS;;wBAAnD,CAAlB;AAIAX,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAE3B,QADE;AAER4B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAXD,CAzB4B,CAsC5B;;;AACA,QAAMI,YAAY,GAAG,MAAOD,QAAP,IAAmB;AACvCR,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,GAAN,CAAW,gCAA+BM,QAAS;;wBAAnD,CAAlB;AAICX,IAAAA,QAAQ,CAAC;AACTM,MAAAA,IAAI,EAAEzB,SADG;AAET0B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFJ,KAAD,CAAR;AAID,GAXD,CAvC4B,CAmD5B;;;AACA,QAAMK,UAAU,GAAG,MAAMb,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE1B;AAAR,GAAD,CAAjC,CApD4B,CAsD5B;;;AACA,QAAMuB,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAExB;AAAR,GAAD,CAAjC;;AAEA,sBACC,oBAAC,aAAD,CAAe,QAAf;AACA,IAAA,KAAK,EAAE;AACNa,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADP;AAENC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFN;AAGNC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHP;AAINC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJT;AAKNG,MAAAA,WALM;AAMNY,MAAAA,UANM;AAONH,MAAAA,OAPM;AAQNE,MAAAA;AARM,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYCnB,KAAK,CAACqB,QAZP,CADD;AAgBA,CAzED;;AA2EA,eAAetB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n\tSEARCH_USERS,\n\tGET_USER,\n\tCLEAR_USERS,\n\tGET_REPOS,\n\tSET_LOADING,\n} from '../types';\n// eslint-disable-next-line\nlet githubClientId;\n// eslint-disable-next-line\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production'){\n\tgithubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n\tgithubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n\tgithubClientId = process.env.GITHUB_CLIENT_ID;\n\tgithubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n\tconst initialState={\n\t\tusers:[],\n\t\tuser:{},\n\t\trepos:[],\n\t\tloading: false\n\t};\n\t\n\tconst [state, dispatch] = useReducer(GithubReducer, initialState);\n\t\n\t// search user \n\tconst searchUsers =  async (text) =>{\n\t\tsetLoading(true);\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: SEARCH_USERS,\n\t\t\tpayload: res.data.items\n\t\t});\n\t};\n\t\n\t// get User\n\tconst getUser = async (username) =>{\n\t\tsetLoading();\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_USER,\n\t\t\tpayload: res.data\n\t\t});\n\t};\n\t\n\t// get Repos\n\tconst getUserRepos = async (username) =>{\n\t\tsetLoading();\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n\t\t\n\t\t\tdispatch({\n\t\t\ttype: GET_REPOS,\n\t\t\tpayload: res.data\n\t\t});\n\t};\n\t// clear users\n\tconst clearUsers = () => dispatch({ type: CLEAR_USERS });\n\t\n\t// Set loading \n\tconst setLoading = () => dispatch({ type: SET_LOADING });\n\t\n\treturn (\n\t\t<GithubContext.Provider\n\t\tvalue={{\n\t\t\tusers: state.users,\n\t\t\tuser: state.user,\n\t\t\trepos: state.repos,\n\t\t\tloading: state.loading,\n\t\t\tsearchUsers,\n\t\t\tclearUsers,\n\t\t\tgetUser,\n\t\t\tgetUserRepos\n\t\t}}\n\t>\n\t\t{props.children}\n\t</GithubContext.Provider>\n\t);\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}