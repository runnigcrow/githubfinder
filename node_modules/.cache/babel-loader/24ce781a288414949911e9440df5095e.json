{"ast":null,"code":"var _jsxFileName = \"/workspace/GithubSearch/github_finder/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(this.state.text);\n      setText('');\n    }\n  };\n\n  const onChange = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  })), showClear && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/workspace/GithubSearch/github_finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","e","preventDefault","state","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AAClE,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMS,QAAQ,GAAEC,CAAD,IAAK;AACnBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAG,EAAX,EAAc;AACZD,MAAAA,QAAQ,CAAC,wBAAD,EAA0B,OAA1B,CAAR;AACD,KAFD,MAEK;AACJH,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWL,IAAZ,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACA;AAED,GATD;;AAWA,QAAMK,QAAQ,GAAGH,CAAD,IAAK;AACpBF,IAAAA,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AACA,GAFD;;AAKA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,iBAHb;AAIC,IAAA,KAAK,EAAEF,IAJR;AAKC,IAAA,QAAQ,EAAEM,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAQC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,KAAK,EAAC,QAFP;AAGC,IAAA,SAAS,EAAC,wBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD,EAcET,SAAS,iBACV;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfD,CADD;AAqBA,CAxCD;;AA2CAH,MAAM,CAACc,SAAP,GAAmB;AAClBb,EAAAA,WAAW,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADV;AAElBb,EAAAA,UAAU,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UAFT;AAGlBd,EAAAA,SAAS,EAAEH,SAAS,CAACkB,IAAV,CAAeD,UAHR;AAIlBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC;AAJP,CAAnB;AAOA,eAAehB,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({searchUsers, showClear, clearUsers, setAlert}) => {\n\tconst[text, setText] = useState('');\n\n\tconst onSubmit=(e)=>{\n\t\te.preventDefault();\n\t\tif (text===''){\n\t\t\t\tsetAlert('Please enter something','light');\n\t\t}else{\n\t\t\tsearchUsers(this.state.text);\n\t\t\tsetText('');\n\t\t}\n\t\t\n\t};\n\n\tconst onChange =(e)=>{\n\t\tsetText(e.target.value);\n\t};\n\n  \n\treturn(\n\t\t<div>\n\t\t\t<form onSubmit={onSubmit} className='form'>\n\t\t\t\t<input \n\t\t\t\t\ttype='text' \n\t\t\t\t\tname='text' \n\t\t\t\t\tplaceholder='Search Users...' \n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={onChange}/>\n\n\t\t\t\t<input \n\t\t\t\t\ttype='submit' \n\t\t\t\t\tvalue='Search' \n\t\t\t\t\tclassName='btn btn-dark btn-block' />\n\t\t\t</form>\n\t\t\t{showClear && (\n\t\t\t<button className=\"btn btn-light btn-block\" onClick={clearUsers}>Clear</button>\n\t\t\t)}\n\n\t\t</div>\n\t)\n}\n\n\nSearch.propTypes = {\n\tsearchUsers: PropTypes.func.isRequired,\n\tclearUsers: PropTypes.func.isRequired,\n\tshowClear: PropTypes.bool.isRequired,\n\tsetAlert: PropTypes.func.isRequired\n};\n\nexport default Search"]},"metadata":{},"sourceType":"module"}