{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/GithubSearch/github_finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/GithubSearch/github_finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/workspace/GithubSearch/github_finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import GithubContext from'./githubContext';import GithubReducer from'./githubReducer';import{SEARCH_USERS,GET_USER,CLEAR_USERS,GET_REPOS,SET_LOADING}from'../types';// eslint-disable-next-line\nvar githubClientId;// eslint-disable-next-line\nvar githubClientSecret;if(process.env.NODE_ENV!=='production'){githubClientId=process.env.REACT_APP_GITHUB_CLIENT_ID;githubClientSecret=process.env.REACT_APP_GITHUB_CLIENT_SECRET;}else{githubClientId=process.env.GITHUB_CLIENT_ID;githubClientSecret=process.env.GITHUB_CLIENT_SECRET;}var GithubState=function GithubState(props){var initialState={users:[],user:{},repos:[],loading:false};var _useReducer=useReducer(GithubReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// search user \nvar searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return axios.get(\"https://api.github.com/search/users?q=\".concat(text,\"&client_id=$\\n\\t\\t\\t{githubClientId}&client_secret=$\\n\\t\\t\\t{githubClientSecret}\"));case 3:res=_context.sent;dispatch({type:SEARCH_USERS,payload:res.data.items});case 5:case\"end\":return _context.stop();}}},_callee);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();// get User\nvar getUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading();_context2.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"?client_id=$\\n\\t\\t\\t{githubClientId}&client_secret=$\\n\\t\\t\\t{githubClientSecret}\"));case 3:res=_context2.sent;dispatch({type:GET_USER,payload:res.data});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getUser(_x2){return _ref2.apply(this,arguments);};}();// get Repos\nvar getUserRepos=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoading();_context3.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"/repos?per_page=5&sort=created:asc&client_id=$\\n\\t\\t\\t{githubClientId}&client_secret=$\\n\\t\\t\\t{githubClientSecret}\"));case 3:res=_context3.sent;dispatch({type:GET_REPOS,payload:res.data});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function getUserRepos(_x3){return _ref3.apply(this,arguments);};}();// clear users\nvar clearUsers=function clearUsers(){return dispatch({type:CLEAR_USERS});};// Set loading \nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};return/*#__PURE__*/React.createElement(GithubContext.Provider,{value:{users:state.users,user:state.user,repos:state.repos,loading:state.loading,searchUsers:searchUsers,clearUsers:clearUsers,getUser:getUser,getUserRepos:getUserRepos}},props.children);};export default GithubState;","map":{"version":3,"sources":["/workspace/GithubSearch/github_finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","get","res","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n\tSEARCH_USERS,\n\tGET_USER,\n\tCLEAR_USERS,\n\tGET_REPOS,\n\tSET_LOADING,\n} from '../types';\n\n// eslint-disable-next-line\nlet githubClientId;\n// eslint-disable-next-line\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production'){\n\tgithubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n\tgithubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n\tgithubClientId = process.env.GITHUB_CLIENT_ID;\n\tgithubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n\tconst initialState={\n\t\tusers:[],\n\t\tuser:{},\n\t\trepos:[],\n\t\tloading: false\n\t};\n\t\n\tconst [state, dispatch] = useReducer(GithubReducer, initialState);\n\t\n\t// search user \n\tconst searchUsers =  async (text) =>{\n\t\tsetLoading(true);\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: SEARCH_USERS,\n\t\t\tpayload: res.data.items\n\t\t});\n\t};\n\t\n\t// get User\n\tconst getUser = async (username) =>{\n\t\tsetLoading();\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}?client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n\t\t\n\t\tdispatch({\n\t\t\ttype: GET_USER,\n\t\t\tpayload: res.data\n\t\t});\n\t};\n\t\n\t// get Repos\n\tconst getUserRepos = async (username) =>{\n\t\tsetLoading();\n\t\t\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n\t\t\t{githubClientId}&client_secret=$\n\t\t\t{githubClientSecret}`);\n\t\t\n\t\t\tdispatch({\n\t\t\ttype: GET_REPOS,\n\t\t\tpayload: res.data\n\t\t});\n\t};\n\t// clear users\n\tconst clearUsers = () => dispatch({ type: CLEAR_USERS });\n\t\n\t// Set loading \n\tconst setLoading = () => dispatch({ type: SET_LOADING });\n\t\n\treturn (\n\t\t<GithubContext.Provider\n\t\tvalue={{\n\t\t\tusers: state.users,\n\t\t\tuser: state.user,\n\t\t\trepos: state.repos,\n\t\t\tloading: state.loading,\n\t\t\tsearchUsers,\n\t\t\tclearUsers,\n\t\t\tgetUser,\n\t\t\tgetUserRepos\n\t\t}}\n\t>\n\t\t{props.children}\n\t</GithubContext.Provider>\n\t);\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}